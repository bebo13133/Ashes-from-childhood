import { useState, useEffect } from 'react';
import './GallerySection.css';

const GallerySection = () => {
  const [currentIndex, setCurrentIndex] = useState(0);
  const [isVisible, setIsVisible] = useState(false);
  const [lightboxOpen, setLightboxOpen] = useState(false);
  const [lightboxIndex, setLightboxIndex] = useState(0);

  const bookImages = [
    {
      src: '/images/book/cover-front.jpg',
      alt: '–ü—Ä–µ–¥–Ω–∞ –∫–æ—Ä–∏—Ü–∞ –Ω–∞ –ü–µ–ø–µ–ª –æ—Ç –¥–µ—Ç—Å—Ç–≤–æ—Ç–æ',
      title: '–•—É–¥–æ–∂–µ—Å—Ç–≤–µ–Ω–∞ –∫–æ—Ä–∏—Ü–∞',
      description: '–ü—Ä–æ—Ñ–µ—Å–∏–æ–Ω–∞–ª–µ–Ω –¥–∏–∑–∞–π–Ω, –∫–æ–π—Ç–æ –ø—Ä–∏–≤–ª–∏—á–∞ –ø–æ–≥–ª–µ–¥–∞'
    },
    {
      src: '/images/book/cover-back.jpg', 
      alt: '–ó–∞–¥–Ω–∞ –∫–æ—Ä–∏—Ü–∞ —Å –æ–ø–∏—Å–∞–Ω–∏–µ',
      title: '–ü–æ–¥—Ä–æ–±–Ω–æ –æ–ø–∏—Å–∞–Ω–∏–µ',
      description: '–ü—ä–ª–Ω–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –∑–∞ —Å—ä–¥—ä—Ä–∂–∞–Ω–∏–µ—Ç–æ –Ω–∞ –∫–Ω–∏–≥–∞—Ç–∞'
    },
    {
      src: '/images/book/book-3d-1.jpg',
      alt: '3D –∏–∑–≥–ª–µ–¥ –Ω–∞ –∫–Ω–∏–≥–∞—Ç–∞',
      title: '–ö–∞—á–µ—Å—Ç–≤–µ–Ω–∏ –º–∞—Ç–µ—Ä–∏–∞–ª–∏', 
      description: '–í–∏—Å–æ–∫–æ–∫–ª–∞—Å–Ω–∞ –ø–µ—á–∞—Ç –∏ –∏–∑–¥–∞–Ω–∏–µ'
    },
    {
      src: '/images/book/book-mockup.jpg',
      alt: '–ö–Ω–∏–≥–∞—Ç–∞ –≤ —Ä–µ–∞–ª–Ω–∞ —Å—Ä–µ–¥–∞',
      title: '–ü–µ—Ä—Ñ–µ–∫—Ç–µ–Ω –ø–æ–¥–∞—Ä—ä–∫',
      description: '–ò–¥–µ–∞–ª–Ω–∞ –∑–∞ —á–µ—Ç–µ–Ω–µ –∏ –∫–æ–ª–µ–∫—Ü–∏–æ–Ω–∏—Ä–∞–Ω–µ'
    }
  ];

  useEffect(() => {
    const observer = new IntersectionObserver(
      ([entry]) => {
        if (entry.isIntersecting) {
          setIsVisible(true);
        }
      },
      { threshold: 0.3 }
    );

    const element = document.querySelector('.gallery-section');
    if (element) observer.observe(element);
    return () => observer.disconnect();
  }, []);

  // Auto-slide functionality
  useEffect(() => {
    if (!lightboxOpen) {
      const interval = setInterval(() => {
        setCurrentIndex(prev => (prev + 1) % bookImages.length);
      }, 5000);
      return () => clearInterval(interval);
    }
  }, [bookImages.length, lightboxOpen]);

  // Lightbox functions
  const openLightbox = (index) => {
    setLightboxIndex(index);
    setLightboxOpen(true);
    document.body.style.overflow = 'hidden';
  };

  const closeLightbox = () => {
    setLightboxOpen(false);
    document.body.style.overflow = 'auto';
  };

  // –ü–û–ü–†–ê–í–ï–ù–ò —Ñ—É–Ω–∫—Ü–∏–∏ —Å preventDefault
  const nextLightboxImage = (e) => {
    e.preventDefault();
    e.stopPropagation();
    setLightboxIndex(prev => (prev + 1) % bookImages.length);
  };

  const prevLightboxImage = (e) => {
    e.preventDefault();
    e.stopPropagation();
    setLightboxIndex(prev => (prev - 1 + bookImages.length) % bookImages.length);
  };

  const handleLightboxClose = (e) => {
    e.preventDefault();
    e.stopPropagation();
    closeLightbox();
  };

  const handleThumbnailClick = (e, index) => {
    e.preventDefault();
    e.stopPropagation();
    setLightboxIndex(index);
  };

  // Keyboard navigation
  useEffect(() => {
    const handleKeyPress = (e) => {
      if (!lightboxOpen) return;
      
      if (e.key === 'Escape') {
        closeLightbox();
      } else if (e.key === 'ArrowRight') {
        setLightboxIndex(prev => (prev + 1) % bookImages.length);
      } else if (e.key === 'ArrowLeft') {
        setLightboxIndex(prev => (prev - 1 + bookImages.length) % bookImages.length);
      }
    };

    window.addEventListener('keydown', handleKeyPress);
    return () => window.removeEventListener('keydown', handleKeyPress);
  }, [lightboxOpen, bookImages.length]);

  return (
    <section className="gallery-section">
      <div className="container">
        <div className={`gallery-content ${isVisible ? 'fade-in-up' : ''}`}>
          
          {/* Gallery Header */}
          <div className="gallery-header">
            <h2 className="gallery-title dramatic-text">
              –†–∞–∑–≥–ª–µ–¥–∞–π—Ç–µ <span className="title-accent">–ö–Ω–∏–≥–∞—Ç–∞</span>
            </h2>
            <p className="gallery-subtitle">
              "–ü–µ–ø–µ–ª –æ—Ç –¥–µ—Ç—Å—Ç–≤–æ—Ç–æ" –≤ –¥–µ—Ç–∞–π–ª–∏ - –∫–∞—á–µ—Å—Ç–≤–æ, –∫–æ–µ—Ç–æ –º–æ–∂–µ—Ç–µ –¥–∞ –ø–æ—á—É–≤—Å—Ç–≤–∞—Ç–µ
            </p>
          </div>

          {/* Main Gallery Display */}
          <div className="gallery-showcase">
            <div className="image-slider">
              <div className="slides-container">
                {bookImages.map((image, index) => (
                  <div 
                    key={index}
                    className={`slide ${index === currentIndex ? 'active' : ''}`}
                  >
                    <div className="slide-image-container">
                      <img 
                        src={image.src}
                        alt={image.alt}
                        className="slide-image"
                      />
                      <div className="slide-overlay">
                        <div className="slide-info">
                          <h3 className="slide-title">{image.title}</h3>
                          <p className="slide-description">{image.description}</p>
                        </div>
                      </div>
                    </div>
                  </div>
                ))}
              </div>

              {/* Navigation Dots */}
              <div className="gallery-dots">
                {bookImages.map((_, index) => (
                  <button
                    key={index}
                    className={`gallery-dot ${index === currentIndex ? 'active' : ''}`}
                    onClick={() => setCurrentIndex(index)}
                  >
                    <span className="dot-inner"></span>
                  </button>
                ))}
              </div>
            </div>

            {/* Clickable Thumbnails */}
            <div className="thumbnails-row">
              {bookImages.map((image, index) => (
                <div 
                  key={index}
                  className={`thumbnail ${index === currentIndex ? 'active' : ''}`}
                  onClick={() => openLightbox(index)}
                >
                  <img 
                    src={image.src}
                    alt={image.alt}
                    className="thumbnail-img"
                  />
                  <div className="thumbnail-label">{image.title}</div>
                  <div className="thumbnail-zoom-hint">
                    <span>üîç</span>
                  </div>
                </div>
              ))}
            </div>
          </div>

          {/* Book Quality Features */}
          <div className="quality-features">
            <h3 className="features-title">–ó–∞—â–æ –∏–º–µ–Ω–Ω–æ —Ç–∞–∑–∏ –∫–Ω–∏–≥–∞?</h3>
            <div className="features-grid">
              <div className="quality-item">
                <div className="quality-icon">üìñ</div>
                <h4>200+ —Å—Ç—Ä–∞–Ω–∏—Ü–∏</h4>
                <p>–ü—ä–ª–Ω–æ—Ü–µ–Ω–Ω–∞ –∏—Å—Ç–æ—Ä–∏—è, –∫–æ—è—Ç–æ —â–µ –≤–∏ –∑–∞–≤–ª–∞–¥–µ–µ</p>
              </div>
              
              <div className="quality-item">
                <div className="quality-icon">‚úçÔ∏è</div>
                <h4>–ê–≤—Ç–µ–Ω—Ç–∏—á–Ω–∞ –∏—Å—Ç–æ—Ä–∏—è</h4>
                <p>–†–µ–∞–ª–Ω–∏ –ø—Ä–µ–∂–∏–≤—è–≤–∞–Ω–∏—è, –Ω–∞–ø–∏—Å–∞–Ω–∏ –æ—Ç —Å—ä—Ä—Ü–µ—Ç–æ</p>
              </div>
              
              <div className="quality-item">
                <div className="quality-icon">üéØ</div>
                <h4>–ï–º–æ—Ü–∏–æ–Ω–∞–ª–Ω–∞ —Å–∏–ª–∞</h4>
                <p>–ö–Ω–∏–≥–∞, –∫–æ—è—Ç–æ —â–µ –æ—Å—Ç–∞–Ω–µ —Å –≤–∞—Å –∑–∞–≤–∏–Ω–∞–≥–∏</p>
              </div>
              
              <div className="quality-item">
                <div className="quality-icon">üíé</div>
                <h4>–ü—Ä–µ–º–∏—É–º –∫–∞—á–µ—Å—Ç–≤–æ</h4>
                <p>–í–∏—Å–æ–∫–æ–∫–ª–∞—Å—Å–Ω–∞ –ø–µ—á–∞—Ç –∏ –º–∞—Ç–µ—Ä–∏–∞–ª–∏</p>
              </div>
            </div>
          </div>
        </div>
      </div>

      {/* Lightbox Modal */}
      {lightboxOpen && (
        <div className="lightbox-overlay" onClick={closeLightbox}>
          <div className="lightbox-container">
            {/* Close Button */}
            <button className="lightbox-close" onClick={handleLightboxClose}>
              <span>√ó</span>
            </button>

            {/* Navigation Arrows - –ü–û–ü–†–ê–í–ï–ù–ò */}
            <button 
              className="lightbox-nav lightbox-prev" 
              onClick={prevLightboxImage}
            >
              <span>‚Äπ</span>
            </button>
            <button 
              className="lightbox-nav lightbox-next" 
              onClick={nextLightboxImage}
            >
              <span>‚Ä∫</span>
            </button>

            {/* Main Image */}
            <div className="lightbox-content" onClick={(e) => e.stopPropagation()}>
              <img 
                src={bookImages[lightboxIndex].src}
                alt={bookImages[lightboxIndex].alt}
                className="lightbox-image"
              />
              <div className="lightbox-info">
                <h3 className="lightbox-title">{bookImages[lightboxIndex].title}</h3>
                <p className="lightbox-description">{bookImages[lightboxIndex].description}</p>
              </div>
            </div>

            {/* Image Counter */}
            <div className="lightbox-counter">
              {lightboxIndex + 1} / {bookImages.length}
            </div>

            {/* Thumbnail Navigation - –ü–û–ü–†–ê–í–ï–ù–ò */}
            <div className="lightbox-thumbnails" onClick={(e) => e.stopPropagation()}>
              {bookImages.map((image, index) => (
                <div
                  key={index}
                  className={`lightbox-thumb ${index === lightboxIndex ? 'active' : ''}`}
                  onClick={(e) => handleThumbnailClick(e, index)}
                >
                  <img src={image.src} alt={image.alt} />
                </div>
              ))}
            </div>

            {/* Keyboard Hint */}
            <div className="lightbox-hint">
              –ò–∑–ø–æ–ª–∑–≤–∞–π—Ç–µ —Å—Ç—Ä–µ–ª–∫–∏—Ç–µ –∏–ª–∏ ESC –∑–∞ –∑–∞—Ç–≤–∞—Ä—è–Ω–µ
            </div>
          </div>
        </div>
      )}
    </section>
  );
};

export default GallerySection;